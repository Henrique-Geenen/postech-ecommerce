services:
  db:
    image: 'postgres:latest'
    container_name: postgres_db
    environment:
      POSTGRES_DB: 'postech'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_USER: 'postgres'
    ports:
      - '5432:5432'
    networks:
      - netpostech
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: 'rabbitmq:latest'
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - netpostech

  ms-cliente:
    build:
      context: ./ms-cliente
    container_name: ms_cliente
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      POSTGRES_URL: postgres_db
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: cliente
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - netpostech

  ms-logistica:
    build:
      context: ./ms-logistica
    container_name: ms_logistica
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      POSTGRES_URL: postgres_db
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: logistica
      OPENROUTE_API_KEY: ${OPENROUTE_API_KEY}
    networks:
      - netpostech

  ms-pedido:
    build:
      context: ./ms-pedido
    container_name: ms_pedido
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      POSTGRES_URL: postgres_db
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: pedido
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    networks:
      - netpostech

  ms-produto:
    build:
      context: ./ms-produto
    container_name: ms_produto
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8084:8084"
    environment:
      POSTGRES_URL: postgres_db
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: produto
    networks:
      - netpostech

  ms-gateway:
    build:
      context: ./gateway
    container_name: ms_gateway
    ports:
      - "8080:8080"
    networks:
      - netpostech
    environment:
      JWT_SECRET: ${JWT_SECRET}

networks:
  netms:
    driver: bridge